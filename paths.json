{
  "path": [
    {
      "_id": "000",
      "title": "Creatorise",
      "age": "20202",
      "url": "./pieces/000_creatorise ",
      "github":"https://github.com/VulpesPaw/CreatoriseWebsite",
      "course": "Web development 1<br>Course Exam Project",
      "tags": ["Static", "Html", "Css"],
      "type": "Front-End",
      "sub_text": "Static Creatorise Mock Page",
      "info": "This project is a static mock website for my company Creatorise.<br> It were used as my final exam in the courseㅤ<i>Web Development One;</i>ㅤthis course regards pure Front-End development;<b>ㅤHTML</b>ㅤandㅤ<b>CSS</b>ㅤwith the most basic of JavaScript, taken at Kattegattgymnasiet, Halmstad.<br> It is static webpages where information cannot be updated by any user. ",
      "img": "./images/creatorise_preview.jpg"
    },
    {
      "_id": "001",
      "title": "Firebook - Firebase",
      "age": "20212",
      "url": "./pieces/001_firebook",
      "github":"https://github.com/VulpesPaw/FireBookList",
      "course": "Gymnasium Exam Thesis",
      "tags": [
        "Google Firebase",
        "BaaS",
        "FireStore",
        "CRUD",
        "Auth",
        "JavaScript"
      ],
      "type": "Front-End",
      "sub_text": "Booklist Thesis with Google Firebase",
      "info": "Firebook, is a fullㅤ<b>CRUD</b>ㅤwebapplication with <b>ㅤauthentication</b>ㅤandㅤ<b>authoritisation</b>ㅤutalizing Google's BaaS<i>(Backend-as-a-Service);</i><b>Firebase,</b> as well as its corresponding DaaSㅤ<i>ㅤ(Database-as-a-Service);ㅤ</i>ㅤ<b>FireStoreㅤ</b> and ultilizing its FireStore Rules. Firestore automaticly serialize data for security.<br> This firebase project were interiely applied to Front-Endㅤ<b>JavaScript.</b>ㅤ<br> As this is my Exam Thesis, I've written a full report about this project with the title <a href=/firebasetext>INSERT HERE -arative analys between PHP and Firebase </a>",
      "img": "./images/firebooks_preview.jpg"
    },
    {
      "_id": "002",
      "title": "PHP-Books",
      "age": "20204",
      "url": "./pieces/002_phpbook",
      "github":"https://github.com/VulpesPaw/PHP-BookList/tree/portfolio.torparlyckan",
      "course": "Web Server Development 1<br>Half-Course Exam",
      "tags": ["PHP", "CRUD", "Auth"],
      "type": "Back-End",
      "sub_text": "PHP Book-list Project",
      "info": "PHP-Books is the project I made for my half-course exam, made in PHP for the course <i>Webserver Development One</i> at Kattegattgymnasiet. <br>It contains full<b>ㅤCRUDㅤ</b>ㅤwithㅤ<b>ㅤauthoritizationㅤ</b>ㅤand<b>ㅤauthenticationㅤ,</b>ㅤutilizing server sessions to keep tab on logged in users.",
      "img": "./images/phpbooks_preview.png"
    },
    {
      "_id": "003",
      "title": "CoffeBooks - Node.JS",
      "age": "20212",
      "url": "",
      "github":"https://github.com/VulpesPaw/CoffeBooks",
      "course": "Web Server Development 1<br>Course Exam Project",
      "tags": [
        "Node.JS",
        "MongoDB",
        "CRUD",
        "JWT-auth",
        "Auth",
        "Cookies",
        "JavaScript"
      ],
      "type": "Full-Stack",
      "sub_text": "Booklist with Node.JS & MongoDB",
      "info": "CoffeBooks is my final course exam project for<i>ㅤWeb Server Development One</i>ㅤat Kattegattgymnasiet. <br>It has a backend made inㅤ<b>Node.JS</b>ㅤmostly built as a set of API's, and a frontend in standardㅤ<b>JavaScript</b>ㅤ which was developed after the backend was made. <br>The Node.JS project is connected to aㅤ<b>MongoDB</b>ㅤcluster for data storage, utilizing fullㅤ<b>CRUD</b>ㅤandㅤ<b>authentication</b> as well asㅤ<b>authoritization</b>ㅤfor a number of requests. Inputfileds get serialized for added security and sensitive user data is handled with bcrypt.",
      "img": "./images/coffebooks_preview.png"
    },
    {
      "_id": "004",
      "title": "React Radio API",
      "age": "20213",
      "url": "pieces/004_react_sv_api/application/",
      "github":"https://github.com/VulpesPaw/educational-React_SvRadio_API/tree/protfolio.torparlyckan",
      "course": "Webserver Development 2<br>",
      "tags": ["React","API","JavaScript"],
      "type": "Front-End",
      "sub_text": "API Management with React",
      "info": "",
      "img": "./images/svtradio_preview.png"
    },
    {
      "_id": "005",
      "title": "C# Circles",
      "age": "20200",
      "url": "",
      "github":"https://github.com/VulpesPaw/Circles",
      "course": "Programming 1<br> Course Exam Project",
      "tags": ["C#", ".NET", "Threads"],
      "type": "System Development",
      "sub_text": "Archery Target Practice",
      "info": "C# Circles is my course exam project forㅤ<i>Programming 1</i>ㅤat Kattegatt gymnasiet.<br/> This project were buildt for, and is in use byㅤ<i>Halmstad Bågskytte Förening</i>.ㅤ <br> The project includes multiple different functions, such asㅤ<b>Threads,</b>ㅤ<b>Cross Thread Communications,</b>ㅤas well as basics priciples of programming. ",
      "img": "./images/circles_preview.png"
    },
    {
      "_id": "006",
      "title": "C# Gomoku",
      "age": "20210",
      "url": "",
      "github":"https://github.com/VulpesPaw/Gomoku",
      "course": "Programming 2<br> Course Exam Project",
      "tags": ["C#", ".NET", "Networking", "I/O", "Async/Await", "Task"],
      "type": "System Development",
      "sub_text": "Three-In-A-Row",
      "info": "My exam project forㅤ<i>Programming 2;</i>ㅤC# Gomoku, a three-in-a-row type of game.<br> The projects futuresㅤ<b>Network</b>ㅤmanagment,ㅤ<b>I/O;</b>ㅤdisk usage,ㅤ<b>Asyncronous</b>ㅤfunctions as well asㅤ<b>tasks</b>ㅤ for multi-threaded usage. ",
      "img": "./images/gomoku_preview.png"
    },
    {
      "_id": "007",
      "title": "Timecop – .Net MAUI",
      "age": "20214",
      "url": "",
      "github":"https://github.com/VulpesPaw/Timecop",
      "course": "Internship at Effectsoft",
      "tags": ["C#",".Net","MAUI","Blazor","API","Jira","Atlassian"],
      "type": "Full-Stack & System Develoment",
      "sub_text": "All-Platform Native Application",
      "info": "Timecop is a project that I made together with one of my classmates during our 4 week practice at Effectsoft throught Kattegattgymnasiets's IT-Gymnasieingengörs program. <br> It's aㅤ<b>C# Blazor</b>ㅤapplication that was converted into the at-the-time beta-version of Microsoftㅤ<b>MAUI,</b>ㅤwhich makes a blazor (web application) into an all-platform native and web application. <br> Our task was to develop an mvp time tracker which should be connected to thierㅤ<b>Jira</b>ㅤandㅤ<b>ㅤAtlassian</b>enviorments.<br> For more information, see project on<a href='https://github.com/VulpesPaw/Timecop' style='text-decoration:underline;'>github</a>. ",
      "img": "./images/timecop_preview.jpg"
    },
    {
      "_id": "008",
      "title": "SQL CleverCloud",
      "age": "20213",
      "url": "",
      "github":"https://github.com/VulpesPaw/educational_SQL-CleverCloud",
      "course": "Webserver Development 2<br>",
      "tags": ["SQL","CleverCloud"],
      "type": "Back-End",
      "sub_text": "SQL CleverCloud Connection",
      "info": "",
      "img": "./images/sql_preview.png"
    }
  ]
}
